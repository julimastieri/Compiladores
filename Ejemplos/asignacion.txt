#Identificadores de menos y m√°s de 25 caracteres.
int a1, h[2], v;
ulong p[_,_], b;
int c[1,_,5];
ulong identificador_Mas_De_25_caracteres; #Se espera que el lexico lo trunque hasta el caracter 25 y genere un mensaje avisando.
int IF, ELSE, END_IF, PRINT, INT, BEGIN, END, FOREACH, IN, ULONG; #Se espera que el lexico las reconozca como identificadores, no como palabras reservadas ya que es case sensitive

#Identificadores que empiecen "_".
	#Se espera que reconozca como token por un lado el _ y por otro la variable
int _variable ;


begin
	#Se espera que cada variable se almacene una unica vez en la TdeS. 
	a:=8;
	a:=b;
	a:=8*2;
	a:=8/2;
	a:=8+2;
	a:=8-2;
	a:=2*3+1;
	a:=2*3+1*5;
	a:=2*3-1*5;
	a:=10/2+4/2;

	c[1]:=a;
	c[b]:=2;

	a:=to_ulong (a);
	b:=to_ulong(2+a)/c[2];
	a:=to_ulong(a)/2-4*2;
	b:=c[a];


	#Sentencias con errores

		a:=; #Se esperaba una expresion para realizar la asignacion. 
		a b]:=8; #Se esperaba '[' para indicar la posicion de la coleccion.
		a [b:=j; #Se esperaba ']' para indicar la posicion de la coleccion.
		a []:=2; #Se esperaba un subindice para realizar la asignacion.
		b := to_ulong a); #Se esperaba '(' para realizar la conversion. 

		_var:= 1; #Sentencia invalida.#variable que comienza con '_', lo cual no es valido
		b 3; #Sentencia invalida.
		:= 3; #Sentencia invalida.
		b := to_ulong (a ; #Sentencia invalida.


	
end